tcl;
eval {
 
set base_dir [pwd]  
set supplier_site_path "$base_dir/SupplierSiteFile.csv"
 
# ------------------------------------------------
# STEP 1: Process Active Supplier / Impacted Sites
# ------------------------------------------------
set output [split [mql temp que bus "Organization" * * where "current==Active" select id current attribute\[Entity Type\].value attribute\[Organization Phone Number\].value attribute\[Organization Fax Number\].value attribute\[Postal Code\].value attribute\[State/Region\].value attribute\[Alternate Name\].value attribute\[City\].value attribute\[Country\].value attribute\[Web Site\].value attribute\[Region\].value dump "^|~";] "\n"]
 
set supplier_site_id [open $supplier_site_path "w"]
 
puts $supplier_site_id "\"Type\",\"Name\",\"Revision\",\"Object Id\",\"Region\",\"State/Region\",\"Entity Type\",\"Organization Phone Number\",\"Organization Fax Number\",\"Postal Code\",\"Web Site\",\"Alternate Name\",\"City\",\"Country\",\"Validation Comment\""
 
proc csv_escape {field} {
	regsub -all {\n} $field { } field
	regsub -all {\r} $field { } field
    return "\"$field\""
}
 
foreach line $output {
    set fields              [split $line "^|~"]
	set type            [string trim [lindex $fields 0]]
	set name            [string trim [lindex $fields 3]]
	set rev             [string trim [lindex $fields 6]]
    set objectId        [string trim [lindex $fields 9]]
	set current         [string trim [lindex $fields 12]]
    set entityType      [string trim [lindex $fields 15]]
    set phone           [string trim [lindex $fields 18]]
	set fax             [string trim [lindex $fields 21]]
	set pin             [string trim [lindex $fields 24]]
	set state           [string trim [lindex $fields 27]]
	set alternateName   [string trim [lindex $fields 30]]
	set city            [string trim [lindex $fields 33]]
	set country         [string trim [lindex $fields 36]]
	set website         [string trim [lindex $fields 39]]
	set region1         [string trim [lindex $fields 42]]
	set region2         [string trim [lindex $fields 45]]
	set region3         [string trim [lindex $fields 48]]
	set region4         [string trim [lindex $fields 51]]
	set region5         [string trim [lindex $fields 54]]
 
	set allowedRegions {"Global" "North America" "Latin America" "Asia Pacific" "EMEA" ""}
	set allowedEntityTypes {"Other" "Supplier: Manufacturer" "Supplier: Distributor" "Business Location" "R&D" "Laboratory" "Co-packers" "Marketing Company" "Internal Manufacturing" "External Packaging" "External Manufacturing" "Distribution Center" "Company"}
 
    set errors {}
	set regionFields [list $region1 $region2 $region3 $region4 $region5]
	if {$regionFields eq ""} {
		lappend errors "Missing Region"
	}
	foreach region $regionFields {
		if {$region ne ""} {
			if {[lsearch -exact $allowedRegions $region] == -1} {
				lappend errors "Invalid Region: $region"
			} 
		}
	}
    if {$entityType eq ""} {
        lappend errors "Missing Entity Type"
    } elseif {[lsearch -exact $allowedEntityTypes $entityType] == -1} {
		lappend errors "Invalid Entity Type: $entityType"
	}
    if {$name eq ""} {
        lappend errors "Missing Name for Object Id - $objectId"
    }
	if {[string length $name] > 255} {
        lappend errors "Name longer than 255 chars"
    }
	if {[string length $state] > 255} {
        lappend errors "State longer than 255 chars"
    }
    if {[string length $phone] > 40} {
        lappend errors "Phone Number longer than 40 chars"
    }
	if {[string length $fax] > 40} {
        lappend errors "Fax Number longer than 40 chars"
    }
	if {[string length $pin] > 20} {
        lappend errors "Postal Code longer than 20 chars"
    }
	if {[string length $website] > 255} {
        lappend errors "Web Site longer than 255 chars"
    }
	if {[string length $alternateName] > 255} {
        lappend errors "Alternate Name longer than 255 chars"
    }
	if {[string length $city] > 255} {
        lappend errors "City longer than 255 chars"
    }
	if {[string length $country] > 255} {
        lappend errors "Country longer than 255 chars"
    }
 
	set validationComment [join $errors {; }]
 
	set regionAll "$region1 $region2 $region3 $region4 $region5"
	
	puts $supplier_site_id [join [list \
    [csv_escape $type] \
    [csv_escape $name] \
    [csv_escape $rev] \
    [csv_escape $objectId] \
    [csv_escape $regionAll] \
    [csv_escape $state] \
    [csv_escape $entityType] \
    [csv_escape $phone] \
    [csv_escape $fax] \
    [csv_escape $pin] \
    [csv_escape $website] \
    [csv_escape $alternateName] \
    [csv_escape $city] \
    [csv_escape $country] \
    [csv_escape $validationComment] \ ] ","]
}
 
close $supplier_site_id

}
