from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.common.exceptions import NoSuchElementException, TimeoutException
from selenium.webdriver.support.ui import WebDriverWait, Select
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
from selenium.webdriver.common.action_chains import ActionChains
import time

driver = webdriver.Chrome()
driver.get("test.com")
time.sleep(10)
name = driver.find_element(By.NAME, "username")
name.send_keys("test")
password = driver.find_element(By.NAME, "password")
password.send_keys("test")
password.send_keys(Keys.RETURN)
time.sleep(30)


actions = ActionChains(driver)

try:
    close_button = driver.find_element(By.CSS_SELECTOR, ".ds-coachmark-close.fonticon.fonticon-wrong")
    actions.move_to_element(close_button).click().perform()
except NoSuchElementException:
    print("Popup not found, skipping...")
time.sleep(5)


main_window = driver.current_window_handle

plus_icon = WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.CSS_SELECTOR, "div.add.topbar-menu-item.topbar-cmd.enabled.fonticon.fonticon-plus"))
)
actions.move_to_element(plus_icon).click().perform()
print("Plus icon clicked successfully!")


menu = WebDriverWait(driver, 10).until(
    EC.visibility_of_element_located((By.CSS_SELECTOR, "div.add.topbar-menu-item.topbar-cmd.enabled.fonticon.fonticon-plus.active"))
)
actions.move_to_element(menu).perform()
print("Hovered over menu")
product_eng = WebDriverWait(driver, 10).until(
    EC.visibility_of_element_located((By.XPATH, "//span[text()='Product Engineering']"))
)
actions.move_to_element(product_eng).perform()
print("Clicked Product Engineering")
create_product = WebDriverWait(driver, 10).until(
    EC.visibility_of_element_located((By.XPATH, "//span[text()='Create Product Data...']"))
)
actions.move_to_element(create_product).click().perform()
print("Clicked Create Product")
time.sleep(10)


WebDriverWait(driver, 10).until(EC.number_of_windows_to_be(2))

for handle in driver.window_handles:
    if handle != main_window:
        driver.switch_to.window(handle)
        print("Switched to create product window")
        break
create_window = driver.current_window_handle

product_type = WebDriverWait(driver, 10).until(
    EC.presence_of_element_located((By.NAME, "TypeActualDisplay"))
)
product_type.clear()
product_type.send_keys("Packaging Component")
product_type.send_keys(Keys.RETURN)
input = driver.find_element(By.NAME, "TypeActual")
driver.execute_script("arguments[0].value = arguments[1];", input, "Packaging Component")
time.sleep(5)
actions.move_to_element_with_offset(product_type, 5, 30).click().perform()
time.sleep(5)


stage_dropdown = WebDriverWait(driver, 10).until(
    EC.presence_of_element_located((By.ID, "StageId"))
)
select = Select(stage_dropdown)
select.select_by_visible_text("Development")
print("Selected 'Development' from the Stage dropdown")
time.sleep(5)


title_input = driver.find_element(By.ID, "TitleId")
title_input.clear()
title_input.send_keys("Automation Test")
print("Given Title as 'Automation Test'")
time.sleep(5)


template_dropdown = WebDriverWait(driver, 10).until(
    EC.presence_of_element_located((By.ID, "TemplateId"))
)
select = Select(template_dropdown)
select.select_by_visible_text("Can")
print("Selected 'Can' from the Template dropdown")
time.sleep(5)


language_dropdown = WebDriverWait(driver, 10).until(
    EC.presence_of_element_located((By.ID, "LanguageId"))
)
select = Select(language_dropdown)
select.select_by_visible_text("English")
print("Selected 'English' from the Language dropdown")
time.sleep(5)


impacted_site_btn = WebDriverWait(driver, 10).until(
    EC.presence_of_element_located((By.NAME, "btnImpacted Site"))
)
actions.move_to_element(impacted_site_btn).click().perform()
print("Clicked choose Impacted Site button")


WebDriverWait(driver, 10).until(EC.number_of_windows_to_be(3)) 

for handle in driver.window_handles:
    if handle not in [main_window, create_window]:
        driver.switch_to.window(handle)
        print("Switched to Impacted Site popup window")
        break
time.sleep(10)

type_input = WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.XPATH, "//input[@placeholder='Select a type (optional)']"))
)
actions.move_to_element(type_input).click().perform()
type_input.send_keys("Business Unit")
time.sleep(5)
actions.move_to_element_with_offset(type_input, 0, 30).click().perform()
print("Selected 'Busniness Unit' from the Type dropdown")
time.sleep(5)
actions.move_to_element_with_offset(type_input, 0, 300).click().perform()


name_input = WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.XPATH, "//li[@id='id_1530516146sug']//input[@placeholder='Enter text']"))
)
actions.move_to_element(name_input).click().perform()
name_input.send_keys("CP-Eldor")
time.sleep(5)
actions.move_to_element_with_offset(name_input, 0, 60).click().perform()
print("Selected name as 'CP-Eldor'")
time.sleep(5)


search_button = WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.XPATH, "//div[@id='search-button-container']//button[text()='Search']"))
)
actions.move_to_element(search_button).click().perform()
print("Clicked the Search button")
time.sleep(10)


checkbox = WebDriverWait(driver, 10).until(
    EC.presence_of_element_located((By.XPATH, "//div[contains(@class,'wux-controls-checkbox')]"))
)
actions.move_to_element(checkbox).click().perform()
print("Clicked the Checkbox")
time.sleep(5)


ok_button = WebDriverWait(driver, 10).until(
    EC.presence_of_element_located((By.ID, "id_in_app_ok"))
)
actions.move_to_element(ok_button).click().perform()
print("Clicked the Ok button")
time.sleep(10)


WebDriverWait(driver, 10).until(EC.number_of_windows_to_be(2))
driver.switch_to.window(create_window)
print("Switched to create window")
time.sleep(10)


oksub_button = WebDriverWait(driver, 15).until(
    EC.presence_of_element_located((By.XPATH, "//button[text()='OK' and contains(@class,'btn-primary')]"))
)
actions.move_to_element(oksub_button).click().perform()
print("Clicked the Ok button")
time.sleep(10)


WebDriverWait(driver, 10).until(EC.number_of_windows_to_be(2))
driver.switch_to.window(main_window)
time.sleep(60)


driver.close()
